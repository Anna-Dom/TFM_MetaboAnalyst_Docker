<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:p="http://primefaces.org/ui"
                template="#{applicationBean1.templateUrl}/_anal_template.xhtml"
                xmlns:c="http://xmlns.jcp.org/jsp/jstl/core">
    <ui:define name="metaInfo">
        <f:event type="preRenderView" listener="#{sessionBean1.registerPage('Spectra processing')}"/>
    </ui:define>
    <ui:define name="myscript">
        <script type="text/javascript" src="#{facesContext.externalContext.requestContextPath}/resources/jscripts/partialSave.js"></script>
    </ui:define>
    <ui:define name="head"> 
        <script type="text/javascript">
            //<![CDATA[
            function start() {
                PF('startButton1').disable();

                window['progress'] = setInterval(function () {
                    var pbClient = PF('pbClient'),
                            oldValue = pbClient.getValue(),
                            newValue = oldValue + 10;

                    pbClient.setValue(pbClient.getValue() + 10);

                    if (newValue === 100) {
                        clearInterval(window['progress']);
                    }


                }, 1000);
            }

            function cancel() {
                clearInterval(window['progress']);
                PF('pbClient').setValue(0);
                PF('startButton1').enable();
            }
            //]]>

            function openadvanced() {
                window.open("SpecOptAdvanced.xhtml", "_blank", "toolbar=yes,scrollbars=yes,resizable=yes,width=800,height=600");
            }

        </script>
    </ui:define>

    <ui:define name="content">
        <h:form id="form1">
            <p:growl id="growl" />
            <h:panelGrid style="padding:20px 40px 20px 50px; font-size: 13px; line-height: 23px; width: 95%">
                <h3>LC-MS Spectra Processing</h3>
                <p>
                    The parameter optimization is based on regions of interest (ROIs) to avoid the time-consuming step of recursive peak detection using complete spectra. 
                    The procedure can significantly improve both the quality of peak detection and quantification compared to results obtained using the default XCMS parameters 
                    (<a href="https://www.mdpi.com/2218-1989/10/5/186" target="_blank">benchmarking results</a>). 
                    The algorithm is now available as the <a href="https://github.com/xia-lab/OptiLCMS" target="_blank">OptiLCMS</a> R package for 
                    local installation or further extension. 
                </p>
                <ul>
                    <li>Default/manual option will use the parameters in the current display. You can manually overwrite these settings;</li>                    
                    <li>Auto-optimized will automatically select the best parameter combination (for the centWave only). </li>
                </ul> 

                <script>
                    function showPopUpTags(type) {
                        switch (type) {
                            case 'centWave' :
                                PF('MatchedFilter').close();
                                PF('centWave').show();
                                break;
                            case 'matchedFilter' :
                                PF('centWave').close();
                                PF('MatchedFilter').show();
                                break;
                        }
                    }

                    function buttonSwith(mode) {
                        switch (mode) {
                            case 'customized' :
                                //PF('platform').enable();
                                PF('Method').enable();
                                PF('min_peakwidth').enable();
                                PF('max_peakwidth').enable();
                                PF('ppm').enable();
                                PF('mzdiff').enable();
                                PF('snthresh').enable();
                                PF('noise').enable();
                                PF('prefilter').enable();
                                PF('value_of_prefilter').enable();
                                PF('fwhm').enable();
                                PF('sigma').enable();
                                PF('steps').enable();
                                PF('max').enable();
                                PF('minSamples').enable();
                                PF('maxFeatures').enable();
                                PF('integrate').enable();
                                PF('extra').enable();
                                PF('span').enable();
                                PF('profStep').enable();
                                PF('Method2').enable();
                                PF('Bandwidth').enable();
                                PF('minFraction').enable();
                                PF('viewbn1').enable();
                                PF('viewbn2').enable();
                                break;
                            case 'auto' :
                                //PF('platform').disable();
                                PF('Method').disable();
                                PF('min_peakwidth').disable();
                                PF('max_peakwidth').disable();
                                PF('ppm').disable();
                                PF('mzdiff').disable();
                                PF('snthresh').disable();
                                PF('noise').disable();
                                PF('prefilter').disable();
                                PF('value_of_prefilter').disable();
                                PF('fwhm').disable();
                                PF('sigma').disable();
                                PF('steps').disable();
                                PF('max').disable();
                                PF('minSamples').disable();
                                PF('maxFeatures').disable();
                                PF('integrate').disable();
                                PF('extra').disable();
                                PF('span').disable();
                                PF('profStep').disable();
                                PF('Method2').disable();
                                PF('Bandwidth').disable();
                                PF('minFraction').disable();
                                PF('viewbn1').disable();
                                PF('viewbn2').disable();
                                break;
                        }
                    }

                </script>

                <style>
                    .ui-panel .ui-panel-content{
                        border: none !important;
                        background: #F9F9FB !important;
                    }
                </style>
                <h:panelGrid columns="2" style="width: 720px; padding: 30px 20px 10px 50px; margin-left:30px; background-color: #F9F9FB;">
                    <h:panelGroup layout="block">
                        <h:outputLabel style="font-weight: bold;" value="LC-MS Platform"/>
                    </h:panelGroup>
                    <h:panelGroup layout="block" style="padding-left: 18px">
                        <p:selectOneMenu value="#{spectraParamer.platformOpt}" 
                                         widgetVar="platform"
                                         disabled="#{spectraParamer.buttonEnable}">
                            <f:selectItem itemLabel="Generic" itemValue="general"/> 
                            <f:selectItem itemLabel="UPLC-Q/E" itemValue="UPLC-Q/E"/> 
                            <f:selectItem itemLabel="UPLC-Q/TOF" itemValue="UPLC-Q/TOF"/> 
                            <f:selectItem itemLabel="UPLC-T/TOF" itemValue="UPLC-T/TOF"/> 
                            <f:selectItem itemLabel="UPLC-Ion_Trap" itemValue="UPLC-Ion_Trap"/> 
                            <f:selectItem itemLabel="UPLC-Orbitrap" itemValue="UPLC-Orbitrap"/> 
                            <f:selectItem itemLabel="UPLC-G2S" itemValue="UPLC-G2S"/> 
                            <f:selectItem itemLabel="HPLC-Q/TOF" itemValue="HPLC-Q/TOF"/> 
                            <f:selectItem itemLabel="HPLC-Ion_Trap" itemValue="HPLC-Ion_Trap"/> 
                            <f:selectItem itemLabel="HPLC-Orbitrap" itemValue="HPLC-Orbitrap"/> 
                            <f:selectItem itemLabel="HPLC-S/Q" itemValue="HPLC-S/Q"/> 
                            <p:ajax listener="#{spectraParamer.updatePlatformParam()}" 
                                    update="update0 update1 update2 update4 update3 update5 update6 update7"/>
                        </p:selectOneMenu>  
                    </h:panelGroup>

                    <h:panelGroup layout="block">
                        <h:outputLabel style="font-weight: bold;" value="Parameter Setting"/>
                    </h:panelGroup>
                    <h:panelGroup layout="block" style="padding-left: 12px">
                        <h:selectOneRadio value="#{spectraParamer.meth}" onchange="buttonSwith(this.value)">
                            <f:selectItem itemValue="customized" itemLabel="Default/manual"/>                                 
                            <f:selectItem itemValue="auto" itemLabel="Auto-optimized"/>
                            <p:ajax event="change"
                                    update ="update4"
                                    listener="#{spectraParamer.setButtonEnableAJ(spectraParamer.meth)}"/>
                        </h:selectOneRadio>
                    </h:panelGroup>

                    <h:panelGroup layout="block">
                        <h:outputLabel style="font-weight: bold;" value="1. Peak Picking"/>
                        <p:graphicImage id="formatIcon" url="../../resources/images/ui-help.png" alt="help" style="width:11px; height: 11px;"/>
                    </h:panelGroup>
                    <h:panelGrid columns="1">
                        
                        <h:panelGrid id="update0" columns ="2" style="padding-left: 15px; line-height: 28px; margin-bottom: 0px; padding-bottom: 0px;">
                            <h:panelGroup style="width: 120px;" layout="block">
                                <h:outputLabel value="Method:"/>      
                            </h:panelGroup>
                            <p:selectOneMenu 
                                value="#{spectraParamer.peakmeth}"
                                onchange="showPopUpTags(this.value)"
                                widgetVar="Method"
                                disabled="#{spectraParamer.buttonEnable}">
                                <f:selectItem itemLabel="centWave" itemValue="centWave"/>
                                <f:selectItem itemLabel="Massifquant" itemValue="Massifquant"/>
                                <f:selectItem itemLabel="MatchedFilter" itemValue="matchedFilter"/>
                            </p:selectOneMenu>
                        </h:panelGrid>

                        <p:panel id="update1" widgetVar="centWave" visible="true" closable="true" toggleable="true"
                                 style="margin-top: 0px; padding-top: 0px;">

                            <h:panelGrid columns ="2" style="width:220px; line-height: 28px;">
                                <h:outputLabel value="min_peakwidth:"
                                               title="Minimum of Peakwidth" style="width: 120px; margin-right: 15px;"/> 
                                <p:inputText style="width:70px" widgetVar="min_peakwidth" disabled="#{spectraParamer.buttonEnable}"
                                             value="#{spectraParamer.min_peakwidth}"/>

                                <h:outputLabel value="max_peakwidth:"
                                               title="Maximum of Peakwidth" style="width: 120px; margin-right: 15px;"/>   
                                <p:inputText style="width:70px" widgetVar="max_peakwidth" disabled="#{spectraParamer.buttonEnable}"
                                             value="#{spectraParamer.max_peakwidth}"/>

                                <h:outputLabel value="ppm:"
                                               title="tolerated mass deviation" style="width: 120px; margin-right: 15px;"/> 
                                <p:inputText style="width:70px" widgetVar="ppm" disabled="#{spectraParamer.buttonEnable}"
                                             value="#{spectraParamer.ppm}"/> 

                                <h:outputLabel value="mzdiff:"
                                               title="minimum difference in m/z for peaks with overlapping retention time" style="width: 120px; margin-right: 15px;"/> 
                                <p:inputText style="width:70px" widgetVar="mzdiff" disabled="#{spectraParamer.buttonEnable}"
                                             value="#{spectraParamer.mzdiff}"/> 

                                <h:outputLabel style="font-size: 13px; width: 120px; margin-right: 15px;" 
                                               value="More options"
                                               title="More options"/> 
                                <p:commandLink value="View"
                                               onclick="PF('PeakPicking').show()"
                                               title ="Show more parameters."/>
                            </h:panelGrid>

                        </p:panel>

                        <p:panel id="update2" widgetVar="MatchedFilter" visible="false" closable="true" toggleable="true"
                                 style="margin-top: 0px; padding-top: 0px;">

                            <h:panelGrid columns ="2" style="width:220px; line-height: 28px;">
                                <h:outputLabel value="fwhm:"
                                               title="width of the model peak for matched filtering" style="width: 120px; margin-right: 60px;"/> 
                                <p:inputText style="width:70px" widgetVar="fwhm" disabled="#{spectraParamer.buttonEnable}"
                                             value="#{spectraParamer.fwhm}"/>

                                <h:outputLabel value="sigma:"
                                               title="standard deviation of model peak width" style="width: 120px; margin-right: 60px;"/>   
                                <p:inputText style="width:70px" widgetVar="sigma" disabled="#{spectraParamer.buttonEnable}"
                                             value="#{spectraParamer.sigma}"/>

                                <h:outputLabel value="steps:"
                                               title="number of bins to be merged" style="width: 120px; margin-right: 60px;"/> 
                                <p:inputText style="width:70px" widgetVar="steps" disabled="#{spectraParamer.buttonEnable}"
                                             value="#{spectraParamer.steps}"/> 

                                <h:outputLabel value="max:"
                                               title="maximum number of peaks identified per slice" style="width: 120px; margin-right: 60px;"/> 
                                <p:inputText style="width:70px" widgetVar="max" disabled="#{spectraParamer.buttonEnable}"
                                             value="#{spectraParamer.max}"/> 

                            </h:panelGrid>

                        </p:panel>
                        
                    </h:panelGrid>

                    <h:panelGroup layout="block">
                        <h:outputLabel style="font-weight: bold;" value="2. Peak Alignment"/>
                        <p:graphicImage id="formatIcon2" url="../../resources/images/ui-help.png" alt="help" style="width:11px; height: 11px;"/>
                    </h:panelGroup>

                    <h:panelGrid id="update3" columns ="2" style="padding: 10px 20px 10px 20px; line-height: 28px;">
                        <h:panelGroup style="width: 120px;" layout="block">
                            <h:outputLabel value="Method:"/>    
                        </h:panelGroup>
                        <p:selectOneMenu styleClass="menu" panelStyleClass="panel" value="#{spectraParamer.rtmeth}" widgetVar="Method2" 
                                         disabled="#{spectraParamer.buttonEnable}">
                            <f:selectItem itemLabel="loess" itemValue="loess"/> 
                            <f:selectItem itemLabel="obiwarp" itemValue="obiwarp"/>
                        </p:selectOneMenu>

                        <h:outputLabel value="Bandwidth:" title="bandwidth of gaussian smoothing kernel"/> 
                        <p:inputText style="width:70px" value="#{spectraParamer.bw}" widgetVar="Bandwidth" disabled="#{spectraParamer.buttonEnable}"/>

                        <h:outputLabel value="minFraction:" title="fraction of samples to be grouped"/> 
                        <p:inputText style="width:70px" value="#{spectraParamer.minFraction}" widgetVar="minFraction" disabled="#{spectraParamer.buttonEnable}"/> 

                        <h:outputLabel value="More options" title="More options"/> 

                        <p:commandLink  value="View" onclick="PF('PeakAlignment').show()"/>
                    </h:panelGrid>

                    <h:panelGroup layout="block">
                        <h:outputLabel style="font-weight: bold;" value="3. Peak Annotation"/>
                        <p:graphicImage id="formatIcon4" url="../../resources/images/ui-help.png" alt="help" style="width:11px; height: 11px;"/>
                    </h:panelGroup>
                    <h:panelGrid id="update5" columns ="2" style="padding: 10px 20px 10px 20px; line-height: 28px;">

                        <h:panelGroup style="width: 120px;" layout="block">
                            <h:outputLabel value="Polarity:"
                                           title="polarity of detection mode"/>      
                        </h:panelGroup>
                        <p:selectOneMenu styleClass="menu" panelStyleClass="panel" value="#{spectraParamer.polarity}">
                            <f:selectItem itemLabel="positive" itemValue="positive"/> 
                            <f:selectItem itemLabel="negative" itemValue="negative"/>
                            <p:ajax listener="#{spectraParamer.initializeAdductList()}" 
                                    update="update9"/>
                        </p:selectOneMenu>

                        <h:outputLabel value="Adducts: " title="Adducts"/> 
                        <p:commandLink value="View" onclick="PF('addDialog').show()"/>

                        <h:outputLabel value="More options" title="More options"/> 
                        <p:commandLink value="View" onclick="PF('PeakAnnotation').show()"/>

                    </h:panelGrid>

                    <h:panelGroup layout="block">
                        <h:outputLabel style="font-weight: bold;" value="4. Contaminant Removal"/>
                        <p:graphicImage id="formatIcon3" url="../../resources/images/ui-help.png" alt="help" style="width:11px; height: 11px;"/>
                    </h:panelGroup>

                    <h:panelGrid id="update4" columns ="2" style="padding: 10px 20px 10px 20px; line-height: 28px;">
                        <h:panelGroup style="width: 120px;" layout="block">
                            <p:selectBooleanCheckbox style="line-height: 18px; padding: 5px 0px 0px 10px" 
                                                     value="#{spectraParamer.rmConts}" 
                                                     widgetVar = "ContsRM"
                                                     disabled = "#{spectraParamer.buttonEnableAJ}"/>
                        </h:panelGroup>   
                        <p:commandLink value="View" 
                                       action="#{spectraProcessor.plotMSData()}"
                                       oncomplete="PF('statusDialog').hide(); PF('dataInspect').show()"
                                       onclick="PF('statusDialog').show()"
                                       update="dataInspect"/>
                    </h:panelGrid>

                    <h:panelGroup layout="block" style="width:180px">
                        <h:outputLabel style="font-weight: bold;" value="5. Blank Subtraction"/>
                        <p:graphicImage id="formatIcon5" url="../../resources/images/ui-help.png" alt="help" style="width:11px; height: 11px;"/>
                    </h:panelGroup>

                    <h:panelGrid id="updateblank" columns ="2" style="padding: 10px 20px 10px 20px; line-height: 28px;">
                        <h:panelGroup style="width: 120px;" layout="block">
                            <p:selectBooleanCheckbox style="line-height: 18px; padding: 5px 0px 0px 10px" 
                                                     value="#{spectraParamer.blksub}" 
                                                     widgetVar = "BLKRM"
                                                     disabled = "#{spectraParamer.buttonEnableBS}"/>
                        </h:panelGroup>
                        <h:panelGroup></h:panelGroup>
                    </h:panelGrid>                    
                </h:panelGrid>
                <h:panelGrid columns= "1" style="width: 720px; padding: 20px; text-align: center">
                    <p:commandButton value="Submit Job"
                                     style="width:130px"
                                     onclick="PF('confirmVar').show()"/>
                </h:panelGrid>
            </h:panelGrid>
            
            <p:tooltip for="formatIcon" styleClass="helpTip">
                <p>The Peak Picking step is first performed to obtain all peaks from the entire spectrum. The "centWave", "Massifquant" and "matchedFilter" 
                    algorithms are supported.</p>
                <ul>
                    <li><b>centWave</b> is used to detect High-resolution MS data</li>
                    <li><b>Massifquant</b> is used to sensitively detect the low-intensity peaks</li>
                    <li><b>matchedFilter</b> is used for Low-resolution MS</li>
                </ul>
            </p:tooltip>

            <p:tooltip for="formatIcon2" styleClass="helpTip" style="width: 660px">
                <p>The second step is 'Peak Alignment', which includes 'Grouping' and 'retention time Correction'.</p>
                <p>Peak Grouping: </p>
                <ul>
                    <li><b>Group-density</b> is used to group the peak in different samples;</li>
                </ul>
                <p>Retention Time Correction: </p>
                <ul>
                    <li><b>loess</b> is used to align the retention times of different samples into one group;</li>
                    <li><b>obiwarp</b> is used to align the retention time based on correlations from the raw data:</li>
                </ul>                
            </p:tooltip>

            <p:tooltip for="formatIcon3" styleClass="helpTip">
                <p>Optionally, the potential peaks coming from contaminants can be automatically excluded.</p>
                <ul>
                    <li> Contaminants are defined as peaks with a retention time range over half of the chromatogram and 
                        should be excluded from the parameter optimization step.</li>
                    <li> Note: This option only functions for 'Auto/Optimized' mode.</li>
                    <li> Please view your data to decide whether or not to remove such peaks.</li>
                </ul>
            </p:tooltip>

            <p:tooltip for="formatIcon4" styleClass="helpTip">
                <p>Finally, the peaks obtained by the steps above are annotated using 'CAMERA' as its core algorithm.</p>
                <ul>
                    <li>Polarity: Specify the polarity of the MS detection mode, either positive or negative;</li>
                    <li>Perc_fwhm: Specify the percentage of the width of the FWHM for peak grouping;</li>
                    <li>Mz_abs_iso: Set the allowed variance for the search;</li>
                    <li>Max_charge: Set the maximum number of isotope charge;</li>
                    <li>Max_iso: Set the maximum number of isotope peaks;</li>
                    <li>Corr_eic_th: Set the threshold for intensity correlations across samples;</li>
                    <li>Mz_abs_add: Set the allowed variance for the search;</li>
                </ul>
            </p:tooltip>

            <p:tooltip for="formatIcon5" styleClass="helpTip">
                <p>This option is used to enable/disable the subtraction of the background features 
                    based on the blanks samples (Start with 'BLANK_' or Marked as 'BLANK').</p>
            </p:tooltip>
        </h:form>

        <p:dialog header="Spectral Inspection"
                  widgetVar="dataInspect"
                  id="dataInspect"
                  showEffect="fade" 
                  hideEffect="fade" 
                  modal="true"
                  closable="true"
                  draggable="false"
                  resizable="false"   
                  appendTo="@(body)"
                  style="margin-top: 40px"
                  position="top"
                  positionType="absolute"
                  >       
            <h:form>
                <style>
                    .inputOnDataTable input
                    {
                        width: 70px !important;
                    }
                </style>
                <h:panelGrid style="padding: 10px; padding-left: 35px; width:600px; font-size: 13px; line-height: 23px"> 

                    <h:panelGrid style="text-align: center; width: 100%;">
                        <p:graphicImage id = "update8" title = "#{spectraProcessor.dataStrucImageNM}" value="#{spectraProcessor.image}" cache="false" alt="">
                            <f:param name="filename" value="#{spectraProcessor.dataStrucImageNM}"/>
                        </p:graphicImage>
                    </h:panelGrid>

                    <h:panelGrid columns ="2" style="padding-left: 10px">
                        <h:panelGrid columns ="2">
                            <h:outputLabel style="font-size: 13px; padding-right: 6px" value="File: "/>    
                            <p:selectOneMenu  value="#{spectraProcessor.fileNameImage}"  dynamic="true" style="width:215px">
                                <f:selectItem itemLabel="Select One" itemValue="" />
                                <f:selectItems value="#{spectraProcessor.spectraFiles}"/>
                            </p:selectOneMenu>
                        </h:panelGrid>
                        <h:outputLabel style="font-size: 12px; padding-top: 0px;" value="(Default is from a random QC sample)"/>

                        <h:panelGrid columns ="4">
                            <h:outputLabel title = "Unit: Thomson" style="font-size: 13px; padding-top: 0px; padding-right: 8px" value="mz range:"/>
                            <p:inputNumber value="#{spectraProcessor.mzl}" minValue="0" maxValue="3000" decimalPlaces="4" styleClass="inputOnDataTable"/>
                            <h:outputLabel style="padding-left: 0px; font-size: 13px; padding-top: 0px" value="~"/> 
                            <p:inputNumber value="#{spectraProcessor.mzh}" minValue="0" maxValue="3000" decimalPlaces="4" styleClass="inputOnDataTable"/>
                        </h:panelGrid>

                        <h:panelGrid columns ="4">
                            <h:outputLabel title = "RT, Retention Time; Unit: second" style="font-size: 13px;" value="RT range:"/>
                            <p:inputNumber value="#{spectraProcessor.rtl}" minValue="0" maxValue="9000" decimalPlaces="2" styleClass="inputOnDataTable"/>
                            <h:outputLabel style="padding-left: 0px; font-size: 13px; padding-top: 0px" value="~"/>  
                            <p:inputNumber value="#{spectraProcessor.rth}" minValue="0" maxValue="9000" decimalPlaces="2" styleClass="inputOnDataTable"/>
                        </h:panelGrid> 

                        <h:panelGrid columns ="2">
                            <h:outputLabel title = "A integer between 0 and 1000, the higer the delicater but more time consumed" style="font-size: 13px;" value="Resolution:"/>
                            <p:inputNumber value="#{spectraProcessor.res}" minValue="1" maxValue="1000" decimalPlaces="0" styleClass="inputOnDataTable"/>                       
                        </h:panelGrid>

                        <h:panelGrid columns ="2">
                            <h:outputLabel style="font-size: 13px;" value="Image Style:"/>   
                            <h:panelGrid style="padding-left: 0px">
                                <p:selectOneMenu styleClass="menu" panelStyleClass="panel" 
                                                 style="width:105px; padding-left: 0px;padding-bottom: 0px;" 
                                                 value="#{spectraProcessor.dimen}">
                                    <f:selectItem itemLabel="3D (Default)" itemValue="3D"/> 
                                    <f:selectItem itemLabel="2D (Heatmap)" itemValue="2D"/>                             
                                </p:selectOneMenu>
                            </h:panelGrid>

                        </h:panelGrid>
                    </h:panelGrid>

                    <h:panelGrid style="width:100%; padding-right: 45px; padding-top: 10px; text-align: center">
                        <p:commandButton value="Update" 
                                         style="width:80px" 
                                         update ="update8"
                                         action="#{spectraProcessor.plotMSData()}"
                                         oncomplete="PF('statusDialog').hide(); PF('dataInspect').show()"
                                         onclick="PF('statusDialog').show()"/>
                    </h:panelGrid>

                </h:panelGrid>
            </h:form>
        </p:dialog>

        <p:dialog header="Peak Picking Parameters"
                  id="update6"                  
                  widgetVar="PeakPicking" 
                  showEffect="fade" 
                  hideEffect="fade" 
                  modal="true"
                  closable="true"
                  draggable="false"
                  resizable="false"   
                  appendTo="@(body)">       
            <h:form>
                <h:panelGrid style="padding: 10px; padding-left: 35px; width:480px; font-size: 13px; line-height: 23px"> 

                    <h:panelGrid columns="4" style="text-align: left; width: 100%;">

                        <h:panelGrid style="width: 60px">
                            <h:outputLabel style="font-size: 13px;" 
                                           value="snthresh:"
                                           title="chromatographic signal-to-noise threshold"/>      
                        </h:panelGrid>   
                        <p:inputText style="width:50px" value="#{spectraParamer.snthresh}" widgetVar="snthresh" disabled="#{spectraParamer.buttonEnable}"/> 

                        <h:panelGrid style="width: 60px">
                            <h:outputLabel style="font-size: 13px;" 
                                           value="noise:"
                                           title="noise level for filteration"/>      
                        </h:panelGrid>   
                        <p:inputText style="width:50px" value="#{spectraParamer.noise}" widgetVar="noise" disabled="#{spectraParamer.buttonEnable}"/> 

                        <h:panelGrid style="width: 60px">
                            <h:outputLabel style="font-size: 13px;" 
                                           value="prefilter:"
                                           title="scans filter to discard small number if scans regions"/>      
                        </h:panelGrid>   
                        <p:inputText style="width:50px" value="#{spectraParamer.prefilter}" widgetVar="prefilter" disabled="#{spectraParamer.buttonEnable}"/> 

                        <h:panelGrid style="width: 60px">
                            <h:outputLabel style="font-size: 13px;" 
                                           value="value_of_prefilter:"
                                           title="intensity filter to discard small intensity regions"/>      
                        </h:panelGrid>   
                        <p:inputText style="width:50px" value="#{spectraParamer.value_of_prefilter}" widgetVar="value_of_prefilter" disabled="#{spectraParamer.buttonEnable}"/> 

                    </h:panelGrid>

                    <h:panelGrid style="width: 100%; text-align: center; padding-top: 10px">

                        <p:commandButton value="Update" 
                                         onclick="PF('statusDialog').show()"
                                         oncomplete="PF('statusDialog').hide()"
                                         widgetVar="viewbn1"
                                         disabled="#{spectraParamer.buttonEnable}"
                                         ajax="false" 
                                         action="#{spectraController.updatePeakParam()}" />  

                    </h:panelGrid>

                </h:panelGrid>
            </h:form>
        </p:dialog>

        <p:dialog header="Peak Alignment Parameters"
                  id="update7"
                  widgetVar="PeakAlignment" 
                  showEffect="fade" 
                  hideEffect="fade" 
                  modal="true"
                  closable="true"
                  draggable="false"
                  resizable="false"   
                  appendTo="@(body)">
            <h:form>
                <h:panelGrid style="padding: 10px; padding-left: 35px; width:480px; font-size: 13px; line-height: 23px"> 

                    <h:panelGrid columns="4" style="text-align: left; width: 100%;">

                        <h:panelGrid style="width: 60px">
                            <h:outputLabel style="font-size: 13px;" 
                                           value="minSamples:"
                                           title="minimum number of sample(s) to be included"/>      
                        </h:panelGrid>   
                        <p:inputText style="width:50px" value="#{spectraParamer.minSamples}" widgetVar="minSamples" disabled="#{spectraParamer.buttonEnable}"/> 

                        <h:panelGrid style="width: 60px">
                            <h:outputLabel style="font-size: 13px;" 
                                           value="maxFeatures:"
                                           title="maximum number of features to be identified"/>      
                        </h:panelGrid>   
                        <p:inputText style="width:50px" value="#{spectraParamer.maxFeatures}" widgetVar="maxFeatures" disabled="#{spectraParamer.buttonEnable}"/> 

                        <h:panelGrid style="width: 60px">
                            <h:outputLabel style="font-size: 13px;" 
                                           value="integrate:"
                                           title="integration method"/>      
                        </h:panelGrid>   
                        <p:inputText style="width:50px" value="#{spectraParamer.integrate}" widgetVar="integrate" disabled="#{spectraParamer.buttonEnable}"/> 

                        <h:panelGrid style="width: 60px">
                            <h:outputLabel style="font-size: 13px;" 
                                           value="extra:"
                                           title="number of extra peaks to allow"/>      
                        </h:panelGrid>   
                        <p:inputText style="width:50px" value="#{spectraParamer.extra}" widgetVar="extra" disabled="#{spectraParamer.buttonEnable}"/> 

                        <h:panelGrid style="width: 60px">
                            <h:outputLabel style="font-size: 13px;" 
                                           value="span:"
                                           title="degree of smoothing for local polynomial regression fitting"/>      
                        </h:panelGrid>   
                        <p:inputText style="width:50px" value="#{spectraParamer.span}" widgetVar="span" disabled="#{spectraParamer.buttonEnable}"/> 

                        <h:panelGrid style="width: 60px">
                            <h:outputLabel style="font-size: 13px;" 
                                           value="profStep:"
                                           title="step size (in m/z) to use for profile generation (*only useful for Obiwarp*)"/>      
                        </h:panelGrid>   
                        <p:inputText style="width:50px" value="#{spectraParamer.profStep}" widgetVar="profStep" disabled="#{spectraParamer.buttonEnable}"/> 

                    </h:panelGrid>

                    <h:panelGrid style="width: 100%; text-align: center; padding-top: 10px">

                        <p:commandButton value="Update" widgetVar="viewbn2"
                                         onclick="PF('statusDialog').show()"
                                         oncomplete="PF('statusDialog').hide()"
                                         ajax="false" 
                                         disabled="#{spectraParamer.buttonEnable}"
                                         action="#{spectraController.updatePeakParam()}" />  

                    </h:panelGrid>                   

                </h:panelGrid>
            </h:form>
        </p:dialog>

        <p:dialog header="Adduct Customization"
                  id="update9"
                  widgetVar="addDialog" 
                  showEffect="fade" 
                  hideEffect="fade" 
                  modal="true"
                  closable="true"
                  draggable="false"
                  resizable="false"   
                  appendTo="@(body)">       
            <h:form>
                <h:panelGrid style="padding: 10px; padding-left: 15px; width:450px; font-size: 13px; line-height: 23px"> 
                    <p:outputLabel style="font-size:13px; font-weight: bold" value="Use the panels below to select adducts to consider:"/>
                    <p:pickList id="adductPane" 
                                value="#{spectraParamer.adductItems}"
                                var ="add" 
                                itemValue="#{add}" 
                                itemLabel="#{add}"
                                showSourceFilter="true" 
                                showTargetFilter="true">
                        <f:facet name="sourceCaption">Available</f:facet>
                        <f:facet name="targetCaption">Include</f:facet>
                        <p:ajax event="transfer" listener="#{spectraParamer.doTransfer}"/>
                    </p:pickList>

                    <h:panelGrid style="width:100%; padding-right: 45px; padding-top: 10px; text-align: center">
                        <p:commandButton value="Confirm" style="width:80px" ajax="false"                                               
                                         action="#{spectraParamer.updateAdductParam()}"/>
                    </h:panelGrid>

                </h:panelGrid>
            </h:form>
        </p:dialog>        

        <p:dialog header="Peak Annotation Parameters"
                  id="update8x"
                  widgetVar="PeakAnnotation" 
                  showEffect="fade" 
                  hideEffect="fade" 
                  modal="true"
                  closable="true"
                  draggable="false"
                  resizable="false"   
                  appendTo="@(body)">       
            <h:form>
                <h:panelGrid style="padding: 10px; padding-left: 35px; width:480px; font-size: 13px; line-height: 23px"> 

                    <h:panelGrid columns="4" style="text-align: center; width: 100%;">

                        <h:panelGrid style="width: 60px">
                            <h:outputLabel style="font-size: 13px;" 
                                           value="Perc_fwhm:"
                                           title="percentage of the width of the FWHM"/>      
                        </h:panelGrid>   
                        <p:inputText style="width:50px" value="#{spectraParamer.fwhmThresh}"/> 

                        <h:panelGrid style="width: 60px">
                            <h:outputLabel style="font-size: 13px;" 
                                           value="Mz_abs_iso:"
                                           title="allowed variance"/>      
                        </h:panelGrid>   
                        <p:inputText style="width:50px" value="#{spectraParamer.mzmabsmiso}"/> 

                        <h:panelGrid style="width: 60px">
                            <h:outputLabel style="font-size: 13px;" 
                                           value="Max_charge:"
                                           title="maximum number of the isotope charge"/>      
                        </h:panelGrid>   
                        <p:inputText style="width:50px" value="#{spectraParamer.max_charge}"/> 

                        <h:panelGrid style="width: 60px">
                            <h:outputLabel style="font-size: 13px;" 
                                           value="Max_iso:"
                                           title="maximum number of isotope peaks"/>      
                        </h:panelGrid>   
                        <p:inputText style="width:50px" value="#{spectraParamer.max_iso}"/> 

                        <h:panelGrid style="width: 60px">
                            <h:outputLabel style="font-size: 13px;" 
                                           value="Corr_eic_th:"
                                           title="threshold for intensity correlations across samples"/>      
                        </h:panelGrid>   
                        <p:inputText style="width:50px" value="#{spectraParamer.corr_eic_th}"/> 

                        <h:panelGrid style="width: 60px">
                            <h:outputLabel style="font-size: 13px;" 
                                           value="Mz_abs_add:"
                                           title="allowed variance for the search"/>      
                        </h:panelGrid>   
                        <p:inputText style="width:50px" value="#{spectraParamer.mz_abs_add}"/> 

                    </h:panelGrid>


                    <h:panelGrid style="width: 100%; text-align: center; padding-top: 10px">

                        <p:commandButton value="Update" 
                                         onclick="PF('statusDialog').show()"
                                         oncomplete="PF('statusDialog').hide()"
                                         ajax="false" 
                                         action="#{spectraController.updatePeakParam()}" 
                                         update="update1 update2"/>  

                    </h:panelGrid>   

                </h:panelGrid>
            </h:form>
        </p:dialog>

        <p:dialog header="Confirmation"
                  widgetVar="confirmVar" 
                  showEffect="fade" 
                  hideEffect="fade" 
                  modal="true"
                  closable="true"
                  draggable="false"
                  resizable="false"   
                  appendTo="@(body)">       
            <h:form>
                <h:panelGrid style="padding: 20px; width:540px; font-size: 13px; line-height: 23px"> 

                    Parameters can not be modified after submitting the job. 
                    Please make sure the correct parameters are specified before proceeding.

                    <h:panelGrid columns="2" style=" width: 100%; text-align:center; padding-top: 20px">
                        <p:button href="#" onclick="PF('confirmVar').hide();" value="Cancel"></p:button> 
                        <p:commandButton value="Confirm"
                                         onclick="PF('statusDialog').show()"
                                         ajax="false"
                                         action="#{spectraController.goToJobStatus}" />
                    </h:panelGrid>
                </h:panelGrid>
            </h:form>
        </p:dialog>

        <p:dialog modal="true" widgetVar="uploadSessionDialog" 
                  style="width: 300px; height:120px; padding:20px;" 
                  appendTo="@(body)" header="Information"
                  draggable="false" closable="true" resizable="false"> 
            <h:form>
                <h:outputLabel value="Running job detected! You should wait till it finishes."/>
                <br />
                <h:outputLabel value="If you would like to submit a new job right now, you can kill the running job by clicking on OK button."/>
                <h:panelGrid style="width:100%; text-align:center; padding-top: 20px; padding-bottom: 10px;" columns="2">                           
                    <p:commandButton value="Cancel" id="cancelBn2"
                                     style="width:60px"
                                     onclick="PF('uploadSessionDialog').hide()"
                                     />  
                    <p:commandButton value="OK" id="okBn2"
                                     style="width:60px"
                                     oncomplete="PF('statusDialog').hide()"
                                     onclick="PF('uploadSessionDialog').hide();
                                             PF('statusDialog').show()"
                                     action="#{spectraController.killCurrentJob()}"
                                     />  
                </h:panelGrid>
            </h:form>
        </p:dialog>

    </ui:define>
</ui:composition>
