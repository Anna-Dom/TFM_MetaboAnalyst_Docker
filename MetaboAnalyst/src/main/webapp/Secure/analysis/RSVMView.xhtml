<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html
    PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml" xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:h="http://java.sun.com/jsf/html" xmlns:f="http://java.sun.com/jsf/core" xmlns:p="http://primefaces.org/ui"
    template="#{applicationBean1.templateUrl}/_anal_template.xhtml">
    <ui:define name="metaInfo">
        <f:event type="preRenderView" listener="#{analBean.performDefaultAnalysis('SVM')}" />
    </ui:define>
    <ui:define name="content">
        <h:panelGrid style="padding:30px 30px 20px 40px; font-size: 13px; line-height: 23px; width:95%">
            <h2>Support Vector Machine (SVM)</h2>
            <p:tabView id="ac" style="width:100%; border: none; background: none; font-size: 13px;">
                <p:tab title="Classification">
                    <p>
                        R-SVM uses SVM (with linear kernel) to perform classification recursively using different
                        feature subsets.
                        Features are selected based on their relative contribution in the classification using cross
                        validation error rates.
                        The least important features are eliminated in the subsequent steps. This process creates a
                        series of SVM models (levels).
                        The features used by the best model are plotted. LOOCV: leave one out cross-validation.
                    </p>
                    <h:form id="form1">
                        <h:panelGrid columns="2" style="padding: 2px 20px 10px 20px; line-height: 23px; ">
                            <h:panelGrid columns="2" style="width: 400px">
                                <h:outputLabel style="font-weight: bold" value="Validation method:" />
                                <p:selectOneMenu styleClass="menu" panelStyleClass="panel"
                                    value="#{classBean.validationOpt}">
                                    <f:selectItem itemLabel="10-fold CV" itemValue="10" />
                                    <f:selectItem itemLabel="LOOCV" itemValue="LOO" />
                                    <f:selectItem itemLabel="Bootstrap" itemValue="bootstrape" />
                                    <f:selectItem itemLabel="Monte Carlo" itemValue="carlo" />
                                </p:selectOneMenu>
                            </h:panelGrid>
                            <!-- Add an input field for Monte Carlo training size -->
                            <h:panelGrid layout="block">
                                <p:outputLabel for="numFolds" value="Number of folds that will be created, if 0 default values will be used:" />
                                <p:inputText id="numFolds" value="#{classBean.numFolds}" type="number" step="1" min="0" />
                            </h:panelGrid>
                            <h:panelGrid layout="block">
                                <p:outputLabel for="trainingSize" value="Training size (in %) for monte carlo cross-validation:" />
                                <p:inputText id="trainingSize" value="#{classBean.trainingSize}" type="number" step="0.01" min="0" max="1" />
                            </h:panelGrid>
                            <p:commandButton value="Submit" onclick="PF('statusDialog').show()"
                                oncomplete="PF('statusDialog').hide()" update=":ac:form1:sumPane  :infoPane:cmdPane"
                                actionListener="#{classBean.svmBn_action()}" />
                        </h:panelGrid>

                        <h:panelGrid id="sumPane" style="padding-top: 20px">
                            <img onerror='this.style.display="none"' src="#{sessionBean1.getCurrentImageURL('svm_cls')}"
                                alt="SVMclass" />
                        </h:panelGrid>
                    </h:form>
                </p:tab>
                <p:tab title="Var. Importance">
                    <h:panelGrid id="impPane" style="padding:20px; width: 100%;">
                        <p>
                            Please note : features are ranked by their frequencies being selected in the best
                            classifiers
                            (only top 15 will be shown)
                        </p>
                        <img onerror='this.style.display="none"' src="#{sessionBean1.getCurrentImageURL('svm_imp')}"
                            alt="SVMImp" />
                    </h:panelGrid>
                </p:tab>
            </p:tabView>
        </h:panelGrid>
    </ui:define>
</ui:composition>